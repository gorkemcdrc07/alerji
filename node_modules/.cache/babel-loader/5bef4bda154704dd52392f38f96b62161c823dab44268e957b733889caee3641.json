{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gorkem.Cadirci\\\\tubitak\\\\src\\\\pages\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Typography, Box, CircularProgress, Alert, Button, Paper, Divider, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport FastfoodIcon from '@mui/icons-material/Fastfood';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Tablo İsimleri (Türkçe adlandırmayı kullanıyoruz!)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KULLANICI_ALERJILERI_TABLOSU = 'kullanici_alerjileri';\n\n// Geçici Ürün Veri Yapısı (Gerçek API'dan gelmesi bekleniyor)\n// NOT: Gerçek veride alerjen listesi Open Food Facts'ten gelmelidir.\nconst initialProductState = {\n  name: null,\n  barcode: null,\n  ingredients: [],\n  // Bu alerjenler kullanıcının alerjileriyle ÇATIŞAN alerjenler olacak\n  conflicting_allergens: []\n};\nconst Result = () => {\n  _s();\n  const {\n    barkod\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [product, setProduct] = useState(initialProductState);\n  const [userAlerjileri, setUserAlerjileri] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // ----------------------------------------------------\n  // 1. Kullanıcının Alerjilerini Çekme\n  // ----------------------------------------------------\n  const fetchUserAllergies = useCallback(async () => {\n    if (!user) return;\n\n    // Alerjen ID'lerini ve adlarını join ile çekiyoruz\n    const {\n      data,\n      error\n    } = await supabase.from(KULLANICI_ALERJILERI_TABLOSU).select(`\n                alerjen_id,\n                alerjenler (ad)\n            `).eq('kullanici_id', user.id);\n    if (error) throw error;\n\n    // Sadece alerjen adlarını alıyoruz\n    const alerjiAdlari = data.map(item => item.alerjenler.ad);\n    setUserAlerjileri(alerjiAdlari);\n    return alerjiAdlari;\n  }, [user]);\n\n  // ----------------------------------------------------\n  // 2. Ürün Bilgisini Çekme ve Alerji Kontrolü\n  // ----------------------------------------------------\n  const fetchProductAndCheckAllergies = useCallback(async alerjiAdlari => {\n    if (!barkod) {\n      setError(\"Barkod bulunamadı.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // Edge Function'ı çağırıyoruz. Edge Function, Open Food Facts'e bağlanacak.\n      const response = await supabase.functions.invoke('check-allergens', {\n        body: {\n          barcode: barkod,\n          userAllergies: alerjiAdlari\n        }\n      });\n      if (response.error) throw response.error;\n      const result = response.data;\n\n      // Edge Function'dan gelen sonucu state'e aktar\n      setProduct({\n        name: result.product_name,\n        barcode: barkod,\n        ingredients: result.ingredients.split(', '),\n        conflicting_allergens: result.conflicting_allergens\n      });\n    } catch (err) {\n      console.error(\"Ürün çekme/kontrol hatası:\", err);\n      setError(\"Ürün bilgisi alınamadı veya sunucu hatası oluştu.\");\n\n      // Hata durumunda geçici (dummy) bir veri gösterelim\n      setProduct({\n        name: \"Örnek Ürün - HATA\",\n        barcode: barkod,\n        ingredients: [\"Su\", \"Şeker\", \"Fıstık Ezmesi (Alerjen!)\"],\n        conflicting_allergens: [\"Fıstık\"]\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [barkod]);\n\n  // ----------------------------------------------------\n  // useEffect: Veri Akışı\n  // ----------------------------------------------------\n  useEffect(() => {\n    // Her iki işlemi de birleştiriyoruz\n    async function loadData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const allergies = await fetchUserAllergies();\n        await fetchProductAndCheckAllergies(allergies);\n      } catch (err) {\n        setError(\"Veri yüklenirken kritik bir hata oluştu.\");\n        setLoading(false);\n      }\n    }\n    loadData();\n  }, [fetchUserAllergies, fetchProductAndCheckAllergies]);\n\n  // ----------------------------------------------------\n  // Render (Arayüz Çizimi)\n  // ----------------------------------------------------\n\n  const hasConflict = product.conflicting_allergens.length > 0;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 28\n      }, this),\n      onClick: () => navigate('/scan'),\n      sx: {\n        mb: 2\n      },\n      children: \"Yeni Tarama Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: hasConflict ? 6 : 4,\n      sx: {\n        p: 3,\n        mb: 3,\n        borderRadius: 3,\n        textAlign: 'center',\n        bgcolor: hasConflict ? '#ffebee' : '#e8f5e9',\n        // Kırmızı veya Yeşil arka plan\n        color: hasConflict ? 'error.main' : 'success.main',\n        border: `2px solid ${hasConflict ? 'red' : 'green'}`\n      },\n      children: [hasConflict ? /*#__PURE__*/_jsxDEV(WarningIcon, {\n        sx: {\n          fontSize: 60,\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n        sx: {\n          fontSize: 60,\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        children: hasConflict ? \"RİSK VAR!\" : \"GÜVENLİ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        fontWeight: \"medium\",\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), hasConflict && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3,\n        fontWeight: 'bold'\n      },\n      children: [\"Bu \\xFCr\\xFCn, belirledi\\u011Finiz alerjenlerden\", /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: product.conflicting_allergens.map((alerjen, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            py: 0.1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(WarningIcon, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: alerjen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), \"i\\xE7ermektedir. L\\xFCtfen dikkatli olunuz.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      sx: {\n        p: 2,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [/*#__PURE__*/_jsxDEV(FastfoodIcon, {\n          sx: {\n            mr: 1,\n            verticalAlign: 'middle'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), \" \\xDCr\\xFCn \\u0130\\xE7eri\\u011Fi\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        fontWeight: \"bold\",\n        children: [\"Barkod Numaras\\u0131: \", barkod]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 1\n        },\n        children: [\"**T\\xFCm \\u0130\\xE7indekiler:** \", product.ingredients.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          fontWeight: \"bold\",\n          children: \"Sizin Kay\\u0131tl\\u0131 Alerjileriniz:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: userAlerjileri.length > 0 ? userAlerjileri.join(', ') : 'Hiç alerjen kaydetmediniz.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"2pxME1CKS8g02wg3g9GqAOAQvw4=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","supabase","useAuth","Typography","Box","CircularProgress","Alert","Button","Paper","Divider","List","ListItem","ListItemIcon","ListItemText","WarningIcon","CheckCircleIcon","FastfoodIcon","ArrowBackIcon","jsxDEV","_jsxDEV","KULLANICI_ALERJILERI_TABLOSU","initialProductState","name","barcode","ingredients","conflicting_allergens","Result","_s","barkod","navigate","user","product","setProduct","userAlerjileri","setUserAlerjileri","loading","setLoading","error","setError","fetchUserAllergies","data","from","select","eq","id","alerjiAdlari","map","item","alerjenler","ad","fetchProductAndCheckAllergies","response","functions","invoke","body","userAllergies","result","product_name","split","err","console","loadData","allergies","hasConflict","length","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","pb","startIcon","onClick","mb","severity","elevation","p","borderRadius","textAlign","bgcolor","color","border","fontSize","variant","fontWeight","dense","alerjen","index","py","primary","gutterBottom","mr","verticalAlign","join","_c","$RefreshReg$"],"sources":["C:/Users/Gorkem.Cadirci/tubitak/src/pages/Result.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    CircularProgress,\r\n    Alert,\r\n    Button,\r\n    Paper,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@mui/material';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport FastfoodIcon from '@mui/icons-material/Fastfood';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Tablo İsimleri (Türkçe adlandırmayı kullanıyoruz!)\r\nconst KULLANICI_ALERJILERI_TABLOSU = 'kullanici_alerjileri';\r\n\r\n// Geçici Ürün Veri Yapısı (Gerçek API'dan gelmesi bekleniyor)\r\n// NOT: Gerçek veride alerjen listesi Open Food Facts'ten gelmelidir.\r\nconst initialProductState = {\r\n    name: null,\r\n    barcode: null,\r\n    ingredients: [],\r\n    // Bu alerjenler kullanıcının alerjileriyle ÇATIŞAN alerjenler olacak\r\n    conflicting_allergens: []\r\n};\r\n\r\nconst Result = () => {\r\n    const { barkod } = useParams();\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n\r\n    const [product, setProduct] = useState(initialProductState);\r\n    const [userAlerjileri, setUserAlerjileri] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // ----------------------------------------------------\r\n    // 1. Kullanıcının Alerjilerini Çekme\r\n    // ----------------------------------------------------\r\n    const fetchUserAllergies = useCallback(async () => {\r\n        if (!user) return;\r\n\r\n        // Alerjen ID'lerini ve adlarını join ile çekiyoruz\r\n        const { data, error } = await supabase\r\n            .from(KULLANICI_ALERJILERI_TABLOSU)\r\n            .select(`\r\n                alerjen_id,\r\n                alerjenler (ad)\r\n            `)\r\n            .eq('kullanici_id', user.id);\r\n\r\n        if (error) throw error;\r\n\r\n        // Sadece alerjen adlarını alıyoruz\r\n        const alerjiAdlari = data.map(item => item.alerjenler.ad);\r\n        setUserAlerjileri(alerjiAdlari);\r\n        return alerjiAdlari;\r\n\r\n    }, [user]);\r\n\r\n    // ----------------------------------------------------\r\n    // 2. Ürün Bilgisini Çekme ve Alerji Kontrolü\r\n    // ----------------------------------------------------\r\n    const fetchProductAndCheckAllergies = useCallback(async (alerjiAdlari) => {\r\n        if (!barkod) {\r\n            setError(\"Barkod bulunamadı.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Edge Function'ı çağırıyoruz. Edge Function, Open Food Facts'e bağlanacak.\r\n            const response = await supabase.functions.invoke('check-allergens', {\r\n                body: { barcode: barkod, userAllergies: alerjiAdlari },\r\n            });\r\n\r\n            if (response.error) throw response.error;\r\n\r\n            const result = response.data;\r\n\r\n            // Edge Function'dan gelen sonucu state'e aktar\r\n            setProduct({\r\n                name: result.product_name,\r\n                barcode: barkod,\r\n                ingredients: result.ingredients.split(', '),\r\n                conflicting_allergens: result.conflicting_allergens,\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error(\"Ürün çekme/kontrol hatası:\", err);\r\n            setError(\"Ürün bilgisi alınamadı veya sunucu hatası oluştu.\");\r\n\r\n            // Hata durumunda geçici (dummy) bir veri gösterelim\r\n            setProduct({\r\n                name: \"Örnek Ürün - HATA\",\r\n                barcode: barkod,\r\n                ingredients: [\"Su\", \"Şeker\", \"Fıstık Ezmesi (Alerjen!)\"],\r\n                conflicting_allergens: [\"Fıstık\"],\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [barkod]);\r\n\r\n    // ----------------------------------------------------\r\n    // useEffect: Veri Akışı\r\n    // ----------------------------------------------------\r\n    useEffect(() => {\r\n        // Her iki işlemi de birleştiriyoruz\r\n        async function loadData() {\r\n            setLoading(true);\r\n            setError(null);\r\n            try {\r\n                const allergies = await fetchUserAllergies();\r\n                await fetchProductAndCheckAllergies(allergies);\r\n            } catch (err) {\r\n                setError(\"Veri yüklenirken kritik bir hata oluştu.\");\r\n                setLoading(false);\r\n            }\r\n        }\r\n        loadData();\r\n    }, [fetchUserAllergies, fetchProductAndCheckAllergies]);\r\n\r\n    // ----------------------------------------------------\r\n    // Render (Arayüz Çizimi)\r\n    // ----------------------------------------------------\r\n\r\n    const hasConflict = product.conflicting_allergens.length > 0;\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 10 }}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ pb: 2 }}>\r\n            <Button\r\n                startIcon={<ArrowBackIcon />}\r\n                onClick={() => navigate('/scan')}\r\n                sx={{ mb: 2 }}\r\n            >\r\n                Yeni Tarama Yap\r\n            </Button>\r\n\r\n            {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n\r\n            {/* Durum Kartı (Uyarı veya Güvenli) */}\r\n            <Paper\r\n                elevation={hasConflict ? 6 : 4}\r\n                sx={{\r\n                    p: 3,\r\n                    mb: 3,\r\n                    borderRadius: 3,\r\n                    textAlign: 'center',\r\n                    bgcolor: hasConflict ? '#ffebee' : '#e8f5e9', // Kırmızı veya Yeşil arka plan\r\n                    color: hasConflict ? 'error.main' : 'success.main',\r\n                    border: `2px solid ${hasConflict ? 'red' : 'green'}`\r\n                }}\r\n            >\r\n                {hasConflict ? (\r\n                    <WarningIcon sx={{ fontSize: 60, mb: 1 }} />\r\n                ) : (\r\n                    <CheckCircleIcon sx={{ fontSize: 60, mb: 1 }} />\r\n                )}\r\n                <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                    {hasConflict ? \"RİSK VAR!\" : \"GÜVENLİ\"}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"medium\">\r\n                    {product.name}\r\n                </Typography>\r\n            </Paper>\r\n\r\n            {/* Alerji Çatışmaları Detayı */}\r\n            {hasConflict && (\r\n                <Alert severity=\"error\" sx={{ mb: 3, fontWeight: 'bold' }}>\r\n                    Bu ürün, belirlediğiniz alerjenlerden\r\n                    <List dense>\r\n                        {product.conflicting_allergens.map((alerjen, index) => (\r\n                            <ListItem key={index} sx={{ py: 0.1 }}>\r\n                                <ListItemIcon><WarningIcon color=\"error\" /></ListItemIcon>\r\n                                <ListItemText primary={alerjen} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    içermektedir. Lütfen dikkatli olunuz.\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Ürün Detayları */}\r\n            <Paper elevation={1} sx={{ p: 2, borderRadius: 2 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    <FastfoodIcon sx={{ mr: 1, verticalAlign: 'middle' }} /> Ürün İçeriği\r\n                </Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"body2\" fontWeight=\"bold\">\r\n                    Barkod Numarası: {barkod}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    **Tüm İçindekiler:** {product.ingredients.join(', ')}\r\n                </Typography>\r\n\r\n                <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"body2\" fontWeight=\"bold\">\r\n                        Sizin Kayıtlı Alerjileriniz:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {userAlerjileri.length > 0 ? userAlerjileri.join(', ') : 'Hiç alerjen kaydetmediniz.'}\r\n                    </Typography>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}